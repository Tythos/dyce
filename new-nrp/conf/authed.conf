worker_processes 1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    include /opt/bitnami/openresty/nginx/conf/mime.types;
    lua_package_path "~/lua/?.lua;;";
    resolver 127.0.0.11;
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 5;

    server {
        listen 80 default_server;
        server_name localhost;

        access_by_lua '
            local opts = {
                redirect_uri_path = "/redirect_uri",
                accept_none_alg = true,
                discovery = "http://auth-svc:8080/auth/realms/dyce/.well-known/openid-configuration",
                client_id = "nrp",
                client_secret = "zR0xkYNK8fHw5pnh6i3HkKnol3tuzEIW",
                redirect_uri_scheme = "http",
                logout_path = "/logout",
                redirect_after_logout_uri = "http://localhost:8004/auth/realms/dyce/protocol/openid-connect/logout?redirect_uri=http://localhost:8005/",
                redirect_after_logout_with_id_token_hint = false,
                session_contents = {id_token=true}
            }
            -- call introspect for OAuth 2.0 Bearer Access Token validation
            local res, err = require("resty.openidc").authenticate(opts)
            if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        ';

        expires 0;
        add_header Cache-Control private;

        location = / {
            root /opt/bitnami/openresty/nginx/html;
        }
    }
}
